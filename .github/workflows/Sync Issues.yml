name: Sync Issue Templates

on:
  push:
    branches:
      - master
    paths:
      - '.github/ISSUE_TEMPLATE/**'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout .github repo
        uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: sync issue templates
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          REPOS=("porotech-documentation" "porotech-frontend" "porotech-backend" "porotech-embedded" "porotech-client")
          for REPO in "${REPOS[@]}"; do
            echo "Synching to $REPO..."
            git clone --depth 1 https://x-access-token:${GH_TOKEN}@github.com/PoroTech-Industries/$REPO.git
            mkdir -p $REPO/.github
            cp -r .github/ISSUE_TEMPLATE $REPO/.github/
            cd $REPO

            #check if default branch exists, else create master
            main_branch=$(git symbolic-ref refs/remotes/origin/HEAD 2>/dev/null | sed 's@^refs/remotes/origin/@@')
            if [ -z "$main_branch" ]; then
              git checkout -b master
              git push origin master
              main_branch="master"
            else
              echo "Default branch for $REPO is $main_branch"
            fi
            
            branch_name="enhancement/update-issue-templates-${{ github.run_id }}"
            git checkout -b "$branch_name"
            git add .github/ISSUE_TEMPLATE
            if git diff --cached --quiet; then
              echo "No changes to commit for $REPO"
            else
              git commit -m "Syncing Issue Templates"
              git push origin "$branch_name"
              gh pr create --base "$main_branch" --head "$branch_name" --title "Sync issue Templates" --body "This PR syncs issue templates as specified through latest push to master on \"https://github.com/PoroTech-Industries/.github\""
            fi
            cd .. 
            rm -rf $REPO
          done
